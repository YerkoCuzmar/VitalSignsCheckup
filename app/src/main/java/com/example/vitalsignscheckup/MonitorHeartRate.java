package com.example.vitalsignscheckup;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.content.Intent;
import android.app.Activity;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;


import org.w3c.dom.Text;

import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;

@RequiresApi(api = Build.VERSION_CODES.N)
public class MonitorHeartRate extends AppCompatActivity {


    int count = 0;



    DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
    Date date = new Date();
    String dateformatted = dateFormat.format(date);
    String histroy_log;




    int i, j;
    double sum, minVal, maxVal;
    int minEle, maxEle;
    int n;

    DecimalFormat df = new DecimalFormat("#0.000");

    ArrayList<Double> data = new ArrayList<Double>(Arrays.<Double>asList(
            53708.0, 45314.0, 39000.0, 49032.0, 40676.0, 32564.0, 25426.0, 16796.0, 2790.0, 29248.0, 33300.0, 28808.0, 27662.0, 23160.0, 20800.0, 32928.0, 44000.0, 34588.0, 29920.0, 23697.0, 19669.0, 17768.0, 38736.0, 29396.0, 24980.0, 19844.0, 16484.0, 18816.0, 46972.0, 37570.0, 32348.0, 26560.0, 21230.0, 33156.0, 49768.0, 39164.0, 34748.0, 27385.0, 22044.0, 38912.0, 46864.0, 36800.0, 32852.0, 25108.0, 20416.0, 37612.0, 46912.0, 37920.0, 37914.0, 30356.0, 15218.0, 34954.0, 40608.0, 22042.0, 151.0, 151.0, 152.0, 151.0, 153.0, 151.0, 151.0, 151.0, 151.0, 151.0, 149.0, 151.0, 152.0, 151.0, 151.0, 149.0, 152.0, 151.0, 151.0, 152.0, 151.0, 150.0, 152.0, 151.0, 151.0, 150.0, 151.0, 151.0, 151.0, 153.0, 65416.0, 65424.0, 65416.0, 65412.0, 65412.0, 65412.0, 65408.0, 65416.0, 65416.0, 65416.0, 65416.0, 65408.0, 65410.0, 65416.0, 60356.0, 57904.0, 65408.0, 65412.0, 65416.0, 65408.0, 65408.0, 65412.0, 65412.0, 65424.0, 65420.0, 65416.0, 65416.0, 65420.0, 65408.0, 65424.0, 65372.0, 47064.0, 44072.0, 11864.0, 152.0, 150.0, 151.0, 150.0, 151.0, 151.0, 27085.0, 9820.0, 24106.0, 65418.0, 49712.0, 26578.0, 17547.0, 16108.0, 59724.0, 38640.0, 24429.0, 16100.0, 150.0, 52140.0, 46224.0, 24626.0, 40571.0, 25972.0, 47684.0, 43320.0, 27434.0, 24470.0, 152.0, 18881.0, 59968.0, 41084.0, 34440.0, 27748.0, 7043.0, 49392.0, 65124.0, 52928.0, 36612.0, 17096.0, 26813.0, 49176.0, 41865.0, 36280.0, 16104.0, 151.0, 49240.0, 43338.0, 43408.0, 36699.0, 12086.0, 43368.0, 47332.0, 39634.0, 37954.0, 18670.0, 10090.0, 49434.0, 47824.0, 44616.0, 22208.0, 7810.0, 43061.0, 31922.0, 32688.0, 39968.0, 28477.0, 26792.0, 25340.0, 32608.0, 29916.0, 18477.0, 25085.0, 32476.0, 31304.0, 21185.0, 8524.0, 14244.0, 15956.0, 13678.0, 15498.0, 29480.0, 13882.0, 43978.0, 32054.0, 10336.0, 150.0, 151.0, 4243.0, 26624.0, 49766.0, 53595.0, 151.0, 151.0, 28400.0, 5160.0, 151.0, 2252.0, 380.0, 44040.0, 27061.0, 11708.0, 14152.0, 13322.0, 46756.0, 60852.0, 37372.0, 33708.0, 24953.0, 23924.0, 43690.0, 5952.0, 151.0, 151.0, 151.0, 39152.0, 14412.0, 8005.0, 8249.0, 5310.0, 53752.0, 35777.0, 15032.0, 20766.0, 30836.0, 65408.0, 65416.0, 65408.0, 63370.0, 65418.0, 65418.0, 65412.0, 65408.0, 65416.0, 65416.0, 65412.0, 65408.0, 52736.0, 48196.0, 38856.0, 58464.0, 48456.0, 46745.0, 60704.0, 60507.0, 55408.0, 23610.0, 44924.0, 45332.0, 23928.0, 57680.0, 31028.0, 31500.0, 38024.0, 29064.0, 65416.0, 65416.0, 65416.0, 58536.0, 38288.0, 60336.0, 52704.0, 39448.0, 20232.0, 11494.0, 16872.0, 41305.0, 39688.0, 53016.0, 40920.0, 14840.0, 50020.0, 64370.0, 54644.0, 37268.0, 23072.0, 4373.0, 742.0, 153.0, 151.0, 151.0, 149.0, 151.0, 152.0, 11344.0, 12440.0, 12901.0, 5140.0, 150.0, 19064.0, 56896.0, 43393.0, 27404.0, 18644.0, 16908.0, 33332.0, 47948.0, 52848.0, 55592.0, 61024.0, 65416.0, 65408.0, 65424.0, 65416.0, 57208.0, 37962.0, 30658.0, 35912.0, 27844.0, 20544.0, 15648.0, 12878.0, 7300.0, 16889.0, 26960.0, 29716.0, 36536.0, 38848.0, 42824.0, 64032.0, 60008.0, 49720.0, 44516.0, 40582.0, 41844.0, 37440.0, 23764.0, 19726.0, 15700.0, 12811.0, 27104.0, 25026.0, 13824.0, 6504.0, 9627.0, 22180.0, 36316.0, 40268.0, 44648.0, 52196.0, 57624.0, 62192.0, 65416.0, 65416.0, 54084.0, 38472.0, 31496.0, 26348.0, 20396.0, 15466.0, 15336.0, 3326.0, 27012.0, 24164.0, 14920.0, 10046.0, 4831.0, 11694.0, 46512.0, 48568.0, 58152.0, 57796.0, 46592.0, 44876.0, 37568.0, 33322.0, 32472.0, 24963.0, 23904.0, 31947.0, 19944.0, 14123.0, 149.0, 6180.0, 43176.0, 45248.0, 51280.0, 47128.0, 40676.0, 39736.0, 31108.0, 19372.0, 11538.0, 3231.0, 7282.0, 8477.0, 151.0, 151.0, 151.0, 23748.0, 25520.0, 149.0, 150.0, 148.0, 151.0, 150.0, 151.0, 150.0, 149.0, 4058.0, 26784.0, 14600.0, 15597.0, 15656.0, 16334.0, 31140.0, 22091.0, 21964.0, 23422.0, 23980.0, 33264.0, 27252.0, 26028.0, 26168.0, 25944.0, 37000.0, 29588.0, 27688.0, 27474.0, 28104.0, 39388.0, 30536.0, 28257.0, 27736.0, 27629.0, 35664.0, 28884.0, 27824.0, 28560.0, 29633.0, 38680.0, 30944.0, 29780.0, 29588.0, 29160.0, 32912.0, 29828.0, 28292.0, 26580.0, 27232.0, 31691.0, 27165.0, 26920.0, 25892.0, 28376.0, 31782.0, 27964.0, 27388.0, 27520.0, 31264.0, 32128.0, 30700.0, 31272.0, 30784.0, 37624.0, 34260.0, 30008.0, 28800.0, 27837.0, 36056.0, 30940.0, 28788.0, 28224.0, 28020.0, 36492.0, 30370.0, 28762.0, 28552.0, 28260.0, 34956.0, 29428.0, 28792.0, 27836.0, 31461.0, 36244.0, 39840.0, 65408.0, 63924.0, 64332.0, 65418.0, 65416.0, 65408.0, 65416.0, 65424.0, 65408.0, 151.0, 151.0, 153.0, 151.0, 150.0, 151.0, 152.0, 152.0, 151.0, 150.0, 150.0, 151.0, 150.0, 150.0, 152.0, 153.0, 151.0, 619.0, 8330.0, 14840.0, 19540.0, 23008.0, 25516.0, 27272.0, 28548.0, 29546.0, 30268.0, 30748.0, 31161.0, 31426.0, 31724.0, 31824.0, 31912.0, 32032.0, 32109.0, 32116.0, 32160.0, 32235.0, 32308.0, 32332.0, 32340.0, 32414.0, 32370.0, 32480.0, 32376.0, 32420.0, 32388.0, 32417.0, 32508.0, 32400.0, 32484.0, 32416.0, 32484.0, 32484.0, 32480.0, 32544.0, 32492.0, 32521.0, 32537.0, 32496.0, 32553.0, 32545.0, 32444.0, 32549.0, 32516.0, 32526.0, 32510.0, 32584.0, 32621.0, 32584.0, 32534.0, 32544.0, 32596.0, 32592.0, 32569.0, 32548.0, 32554.0, 32576.0, 32576.0, 32568.0, 32585.0, 32704.0, 32561.0, 32602.0, 32596.0, 32568.0, 32652.0, 32532.0, 32616.0, 32560.0, 32588.0, 32536.0, 32600.0, 32628.0, 32626.0, 32584.0, 32604.0, 32600.0, 32648.0, 32616.0, 32596.0, 32640.0, 32612.0, 32612.0, 32682.0, 32608.0, 32504.0, 32544.0, 32604.0, 32688.0, 32466.0, 32680.0, 32608.0, 32634.0, 32636.0, 32596.0, 32614.0, 32600.0, 32656.0, 32660.0, 32648.0, 32700.0, 32596.0, 32648.0, 32651.0, 32626.0, 32621.0, 32672.0, 32716.0, 32633.0, 32673.0, 32700.0, 32580.0, 32608.0, 32677.0, 32688.0, 32624.0, 32668.0, 32640.0, 32653.0, 32596.0, 32672.0, 32668.0, 32664.0, 32664.0, 32641.0, 32656.0, 32652.0, 32646.0, 32712.0, 32620.0, 32632.0, 32700.0, 32732.0, 32700.0, 32648.0, 32680.0, 32752.0, 32640.0, 32622.0, 32656.0, 32560.0, 32713.0, 32628.0, 32684.0, 32732.0, 32664.0, 32660.0, 32324.0, 32680.0, 32448.0, 32740.0, 32704.0, 32696.0, 32692.0, 32644.0, 32617.0, 32578.0, 32688.0, 32664.0, 32736.0, 32684.0, 32672.0, 32697.0, 32621.0, 32664.0, 32712.0, 32756.0, 32764.0, 32669.0, 32698.0, 32656.0, 32688.0, 32648.0, 32729.0, 32697.0, 32716.0, 32644.0, 32648.0, 32668.0, 32624.0, 32736.0, 32729.0, 32656.0, 32744.0, 32730.0, 32640.0, 32660.0, 32665.0, 32696.0, 32657.0, 32808.0, 32594.0, 32576.0, 32740.0, 32710.0, 32686.0, 32644.0, 32716.0, 32704.0, 32668.0, 32737.0, 32704.0, 32680.0, 32740.0, 32632.0, 32704.0, 32697.0, 32612.0, 32704.0, 32664.0, 32792.0, 32690.0, 32656.0, 32772.0, 32731.0, 32708.0, 32692.0, 32680.0, 32668.0, 32696.0, 32716.0, 32737.0, 32744.0, 32708.0, 32716.0, 32720.0, 32800.0, 32748.0, 32642.0, 32672.0, 32740.0, 32672.0, 32661.0, 32552.0, 32700.0, 32677.0, 32608.0, 32781.0, 32624.0, 32673.0, 32724.0, 32676.0, 32660.0, 32720.0, 32640.0, 32720.0, 32736.0, 32797.0, 32720.0, 32696.0, 32760.0, 32680.0, 32750.0, 32362.0, 32740.0, 32728.0, 32691.0, 32704.0, 32800.0, 32613.0, 32656.0, 32700.0, 32766.0, 32740.0, 32680.0, 32616.0, 32741.0, 32684.0, 32673.0, 32688.0, 32793.0, 32715.0, 32713.0, 32711.0, 32644.0, 32601.0, 32690.0, 32650.0, 32668.0, 32704.0, 32720.0, 32724.0, 32680.0, 32722.0, 32691.0, 32672.0, 32748.0, 32398.0, 32700.0, 32697.0, 32797.0, 32708.0, 32672.0, 32704.0, 32704.0, 32288.0, 32512.0, 32682.0, 32754.0, 32673.0, 32545.0, 32736.0, 32644.0, 32688.0, 32476.0, 32728.0, 32728.0, 32704.0, 32700.0, 32556.0, 32672.0, 32708.0, 32709.0, 32737.0, 32694.0, 32688.0, 32624.0, 32696.0, 32686.0, 32700.0, 32754.0, 32777.0, 32688.0, 32728.0, 32756.0, 32803.0, 32713.0, 32780.0, 32700.0, 32716.0, 32728.0, 32722.0, 32696.0, 32729.0, 32712.0, 32676.0, 32713.0, 32730.0, 32722.0, 32712.0, 32732.0, 32713.0, 32696.0, 32721.0, 32668.0, 32664.0, 32669.0, 32712.0, 32708.0, 32681.0, 32620.0, 32677.0, 32700.0, 32732.0, 32673.0, 32696.0, 32749.0, 32688.0, 32616.0, 32704.0, 32704.0, 32666.0, 32752.0, 32728.0, 32636.0, 32728.0, 32716.0, 32709.0, 32784.0, 32740.0, 32820.0, 32715.0, 32540.0, 32716.0, 32736.0, 32696.0, 32736.0, 32728.0, 32770.0, 32716.0, 32737.0, 32736.0, 32732.0, 32728.0, 32728.0, 32700.0, 32765.0, 32696.0, 32708.0, 32728.0, 32717.0, 32709.0, 32544.0, 32722.0, 32690.0, 32697.0, 32709.0, 32708.0, 32741.0, 32724.0, 32748.0, 32728.0, 32697.0, 32740.0, 32704.0, 32756.0, 32688.0, 32704.0, 32672.0, 32778.0, 32668.0, 32714.0, 32690.0, 32705.0, 32676.0, 32736.0, 32756.0, 32741.0, 32736.0, 32644.0, 32750.0, 32744.0, 32748.0, 32784.0, 32740.0, 32640.0, 32744.0, 32784.0, 32730.0, 32778.0, 32780.0, 65416.0, 65416.0, 65416.0, 65416.0, 65418.0, 65412.0, 65428.0, 65424.0, 65424.0, 65408.0, 65424.0, 65416.0, 65408.0, 65408.0, 65416.0, 65408.0, 65424.0, 65408.0, 65422.0, 65400.0, 65418.0, 65408.0, 65418.0, 65408.0, 65408.0, 65408.0, 65424.0, 65420.0, 65408.0, 65408.0, 65408.0, 36632.0, 151.0, 151.0, 151.0, 152.0, 150.0, 149.0, 150.0, 150.0, 151.0, 149.0, 150.0, 151.0, 151.0, 149.0, 147.0, 149.0, 150.0, 151.0, 152.0, 153.0, 149.0, 149.0, 150.0, 150.0, 149.0, 150.0, 152.0, 149.0, 151.0, 148.0, 150.0, 150.0, 150.0, 2634.0, 10563.0, 16592.0, 20946.0, 24152.0, 26284.0, 27916.0, 29181.0, 29962.0, 30644.0, 31016.0, 31242.0, 31640.0, 31808.0, 32016.0, 32092.0, 32178.0, 32192.0, 32293.0, 32352.0, 32332.0, 32376.0, 32392.0, 32432.0, 32456.0, 32480.0, 32477.0, 32568.0, 32512.0, 40944.0, 65408.0, 65408.0, 65424.0, 65420.0, 65416.0, 65412.0, 65410.0, 65416.0, 65408.0, 65416.0, 65424.0, 65409.0, 65400.0, 65408.0, 65420.0, 65408.0, 65408.0, 34448.0, 149.0, 31352.0, 65412.0, 65416.0, 65420.0, 65420.0, 65412.0, 65416.0, 65408.0, 65404.0, 65412.0, 65424.0, 60808.0, 65408.0, 65416.0, 65424.0, 65416.0, 65416.0, 65432.0, 65416.0, 65408.0, 65412.0, 65416.0, 65408.0, 42796.0, 33224.0, 61080.0, 26580.0, 55840.0, 12008.0, 151.0, 149.0, 150.0, 150.0, 272.0, 19204.0, 21792.0, 18530.0, 16746.0, 12274.0, 5219.0, 46852.0, 51848.0, 35800.0, 32921.0, 57344.0, 65424.0, 65412.0, 48074.0, 151.0, 150.0, 150.0, 150.0, 149.0, 149.0, 151.0, 151.0, 150.0, 151.0, 148.0, 151.0, 151.0, 149.0, 151.0, 151.0, 149.0, 150.0, 151.0, 150.0, 65416.0, 65408.0, 65408.0, 65416.0, 65408.0, 65416.0, 65416.0, 65401.0, 65416.0, 65410.0, 42632.0, 149.0, 149.0, 150.0, 150.0, 150.0, 149.0, 151.0, 150.0, 149.0, 151.0, 36188.0, 45848.0, 56844.0, 28256.0, 151.0, 150.0, 150.0, 150.0, 150.0, 150.0, 2928.0, 18016.0, 23516.0, 23040.0, 29140.0, 41692.0, 46888.0, 7437.0, 151.0, 42584.0, 65426.0, 65416.0, 65416.0, 65408.0, 65408.0, 65420.0, 65424.0, 65420.0, 65416.0, 65416.0, 65416.0, 65416.0, 65420.0, 57364.0, 37024.0, 63976.0, 65416.0, 65416.0, 65412.0, 65416.0, 65416.0, 65424.0, 24808.0, 41764.0, 58936.0, 57456.0, 65408.0, 65416.0, 65416.0, 65416.0, 19976.0, 151.0, 150.0, 151.0, 150.0, 151.0, 65416.0, 65408.0, 65416.0, 65418.0, 65416.0, 65410.0, 65400.0, 65416.0, 65408.0, 65412.0, 65416.0, 65424.0, 65416.0, 65424.0, 65412.0, 65408.0, 65408.0, 51835.0, 151.0, 149.0, 150.0, 149.0, 150.0, 150.0, 149.0, 150.0, 149.0, 151.0, 150.0, 151.0, 11212.0, 53280.0, 60018.0, 60320.0, 53912.0, 43864.0, 64904.0, 62616.0, 32532.0, 20648.0, 12344.0, 28856.0, 37160.0, 33040.0, 25888.0, 7356.0, 16968.0, 31436.0, 29384.0, 31044.0, 33218.0, 50024.0, 65416.0, 65408.0, 65416.0, 56696.0, 38968.0, 45744.0, 29495.0, 21116.0, 151.0, 151.0, 4162.0, 150.0, 237.0, 10942.0, 18268.0, 38344.0, 28338.0, 26038.0, 15512.0, 9708.0, 35816.0, 31136.0, 29952.0, 21724.0, 9800.0, 29876.0, 27284.0, 26404.0, 29488.0, 30298.0, 53136.0, 54256.0, 58832.0, 63480.0, 50464.0, 65408.0, 65424.0, 65416.0, 65416.0, 64104.0, 64090.0
    ));

    SignalDetector signalDetector = new SignalDetector();
    int lag = 30;
    double threshold = 5.0;
    double influence = 0;



    HashMap<String, List> resultsMap = signalDetector.analyzeDataForSignals(data, lag, threshold, influence);

    List<Integer> signalsList = resultsMap.get("signals");
    List<Double> filteredDataList = resultsMap.get("filteredData");


    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_monitor_heart_rate);
        Toolbar toolbar = (Toolbar) findViewById(R.id.heartratetoolbar);
        setSupportActionBar(toolbar);

        toolbar.setNavigationIcon(R.drawable.ic_back);

        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });

        TextView tv1 = (TextView)findViewById(R.id.alerta_heart);
        tv1.setText("Mostrar Alerta");

        TextView tv2 = (TextView)findViewById(R.id.medida_heart);
        tv2.setText("Midiendo");

        TextView tv3 = (TextView)findViewById(R.id.med_ppm);
        tv3.setText("ppm");


        final TextView textView = (TextView)findViewById(R.id.medida_heart);


        final TextView h1 = (TextView)findViewById(R.id.heart1);


        double valor = 0;
        int pulsaciones = 0;
        int dif = 0;
        final int sample_rate = 100;
        int ppm = 0;
        int pulsaciones2 = 0;
        for (int i = 0; i < signalsList.size(); i++) {
            //if (signalsList.get(i) != 0) {

                dif = dif + 1;
                //System.out.println("Point " + i + " gave signal " + signalsList.get(i));
                if ((i + 1) != signalsList.size()){
                    if (signalsList.get(i) == 0){
                        if (signalsList.get((i+1)) == 1){
                            valor = signalsList.get(i);
                            pulsaciones = pulsaciones + 1;
                            pulsaciones2 = pulsaciones2 + 1;
                            //System.out.println("PULSACION EN LA MEDICION: "+ i);
                            System.out.println("VALOR DE DIF " + dif);
                            dif = 0;

                        }
                        else if(signalsList.get(i+1) == -1){
                            continue;
                        }
                    }
                    else if(signalsList.get(i) == -1){
                        if (signalsList.get((i+1)) == 1){
                            valor = signalsList.get(i);
                            pulsaciones = pulsaciones + 1;
                            pulsaciones2 = pulsaciones2 + 1;
                            System.out.println("PULSACION EN LA MEDICION: "+ i);
                            System.out.println("VALOR DE DIF " + dif);
                            dif = 0;
                        }
                        else if(signalsList.get((i+1)) == 0){
                            continue;
                        }
                    }
                    else if(signalsList.get(i) == 1){
                        continue;
                    }
                }
                System.out.println("VALOR DE I ES: " + i);
                if (i % (sample_rate*2) == 0){
                    ppm = (ppm + (pulsaciones2*60/2))/2;
                    System.out.println("PPM ES: "+ ppm);
                    System.out.println("ENTRA AL i = "+ i);
                    pulsaciones2 = 0;
                }
                //System.out.println("Point " + i + " gave signal " + signalsList.get(i));
            //}
        }
        System.out.println("CANTIDAD DE PULSACIONES ES " + pulsaciones);
        n = signalsList.size();
        System.out.println("valor de n es " + n);
        final int finalPulsaciones = pulsaciones;

        Thread t=new Thread(){
            @Override
            public void run(){
                while(!isInterrupted()){
                    try {
                        Thread.sleep(1000);  //1000ms = 1 sec
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                count++;
                                textView.setText(String.valueOf(finalPulsaciones));
                                date = new Date();
                                dateformatted = dateFormat.format(date);
                                histroy_log = dateformatted + ": " + count + " ppm";
                                h1.setText(histroy_log);
                                try {
                                    OutputStreamWriter output = new OutputStreamWriter(openFileOutput("heart_rate_history.txt", Activity.MODE_APPEND));
                                    output.append(histroy_log+"\n");
                                    output.flush();
                                    output.close();
                                } catch (IOException e) {
                                }
                            }
                        });
                    }catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        t.start();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        switch (id) {
            // Respond to the action bar's Up/Home button
            case android.R.id.home:
                //NavUtils.navigateUpFromSameTask(this);
                onBackPressed();
                return true;
        }
        return super.onOptionsItemSelected(item);
    }

    public void viewHistory(View view){
        Intent viewHistoryIntent = new Intent(view.getContext(), checkHistory.class);
        viewHistoryIntent.putExtra("origin", "heartRate");
        startActivity(viewHistoryIntent);
    }
    public static double transformECG(int n, int ADC){
        double ECG_V, ECG_mV;
        int G_ECG, VCC;

        VCC = 3;      // operating voltage
        G_ECG = 1000; // sensor gain

        ECG_V = (ADC/Math.pow(2, n) - 0.5)*VCC/G_ECG;

        ECG_mV = ECG_V*1000;

        return ECG_mV;
    }
}