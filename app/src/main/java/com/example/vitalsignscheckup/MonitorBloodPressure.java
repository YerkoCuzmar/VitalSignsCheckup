package com.example.vitalsignscheckup;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.ActionBar;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.app.Activity;
import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.view.MenuItem;
import android.view.View;
import android.widget.TextView;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.util.HashMap;
import java.util.List;
import java.util.Objects;

@RequiresApi(api = Build.VERSION_CODES.N)
public class MonitorBloodPressure extends AppCompatActivity {

    int count = 0; // este valor es ADC
    int count2 = 0; // este valor es ADC
    int n = 16; //para transformaci√≥n. Cantidad de canales.

    int m, m2;

    DateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");
    Date date = new Date();
    String dateFormatted = dateFormat.format(date);

    //BVP
    ArrayList<Double> data = new ArrayList<Double>(Arrays.<Double>asList(
            //50169.0, 31732.0, 28352.0, 17364.0, 10536.0, 38940.0, 36552.0, 36024.0, 35690.0, 29504.0, 30136.0, 12147.0, 19068.0, 26164.0, 26104.0, 19086.0, 28112.0, 31092.0, 24904.0, 17976.0, 28928.0, 43340.0, 45208.0, 53024.0, 45952.0, 26544.0, 13152.0, 15841.0, 25685.0, 30468.0, 36453.0, 37096.0, 40240.0, 32924.0, 34224.0, 36564.0, 36016.0, 34056.0, 33033.0, 32500.0, 34568.0, 32050.0, 29664.0, 33424.0, 35105.0, 34909.0, 37408.0, 32756.0, 32248.0, 32128.0, 34576.0, 27752.0, 41844.0, 5803.0, 12768.0, 17828.0, 21516.0, 65512.0, 65512.0, 57536.0, 51508.0, 47016.0, 43628.0, 41068.0, 39120.0, 37642.0, 36460.0, 30156.0, 27037.0, 29488.0, 31641.0, 24856.0, 23776.0, 15940.0, 17282.0, 21600.0, 36524.0, 22156.0, 19792.0, 14644.0, 27257.0, 58768.0, 32540.0, 60000.0, 53216.0, 48216.0, 27580.0, 23.0, 4533.0, 11470.0, 16644.0, 20544.0, 23490.0, 25698.0, 27380.0, 58936.0, 24084.0, 45904.0, 62584.0, 34056.0, 14745.0, 19349.0, 30704.0, 50324.0, 50784.0, 42754.0, 7712.0, 22196.0, 26904.0, 17300.0, 61160.0, 65516.0, 63684.0, 56100.0, 44708.0, 48348.0, 45536.0, 42524.0, 40324.0, 23626.0, 7565.0, 21.0, 2385.0, 9812.0, 20794.0, 62304.0, 65522.0, 4155.0, 10890.0, 19076.0, 65512.0, 64780.0, 52760.0, 60512.0, 22.0, 7743.0, 13985.0, 65520.0, 63616.0, 24474.0, 61000.0, 45700.0, 22.0, 5788.0, 65528.0, 61324.0, 54480.0, 4417.0, 44796.0, 53314.0, 24.0, 21208.0, 61668.0, 6524.0, 5730.0, 9560.0, 48112.0, 61610.0, 47840.0, 21.0, 51832.0, 59944.0, 52193.0, 34692.0, 24705.0, 24.0, 5722.0, 12392.0, 65512.0, 4683.0, 11866.0, 65520.0, 10516.0, 65513.0, 18109.0, 8229.0, 14450.0, 18954.0, 65520.0, 60304.0, 52904.0, 20.0, 304.0, 46252.0, 65524.0, 349.0, 65522.0, 1249.0, 65516.0, 64876.0, 48904.0, 23.0, 15762.0, 54088.0, 17859.0, 5340.0, 12193.0, 27084.0, 32785.0, 22461.0, 65516.0, 63592.0, 4923.0, 8633.0, 53584.0, 62024.0, 23.0, 11872.0, 49296.0, 46432.0, 2325.0, 10056.0, 15696.0, 30412.0, 63072.0, 60928.0, 55816.0, 55984.0, 50344.0, 19954.0, 15322.0, 24.0, 5161.0, 11984.0, 22592.0, 30844.0, 51016.0, 65528.0, 42436.0, 21444.0, 29326.0, 30528.0, 47744.0, 61200.0, 2570.0, 4701.0, 5461.0, 11984.0, 17129.0, 65512.0, 60804.0, 37204.0, 4934.0, 3738.0, 33664.0, 65520.0, 50388.0, 23.0, 6080.0, 12752.0, 65516.0, 61376.0, 54252.0, 6218.0, 1507.0, 9348.0, 15141.0, 65514.0, 65512.0, 53456.0, 2499.0, 65404.0, 23.0, 5759.0, 12530.0, 13698.0, 64496.0, 2726.0, 65508.0, 60640.0, 53720.0, 23.0, 4634.0, 64812.0, 2643.0, 10268.0, 65516.0, 4252.0, 61176.0, 21.0, 58690.0, 24.0, 7822.0, 65512.0, 62600.0, 55106.0, 50092.0, 22.0, 4435.0, 65512.0, 25.0, 8248.0, 14316.0, 18828.0, 62628.0, 65520.0, 59848.0, 53184.0, 26064.0, 24.0, 5861.0, 12523.0, 17504.0, 20998.0, 21924.0, 40256.0, 54080.0, 36640.0, 33404.0, 65512.0, 58984.0, 49074.0, 25.0, 3366.0, 8080.0, 14185.0, 18745.0, 22176.0, 24732.0, 65520.0, 65528.0, 57476.0, 51466.0, 46972.0, 7806.0, 24.0, 7310.0, 13563.0, 11268.0, 16648.0, 20299.0, 27505.0, 24304.0, 26344.0, 27890.0, 56776.0, 46820.0, 20798.0, 65524.0, 65522.0, 59420.0, 16522.0, 27466.0, 23.0, 5428.0, 55640.0, 29580.0, 36864.0, 5132.0, 49264.0, 48960.0, 5262.0, 12676.0, 15636.0, 19098.0, 22440.0, 33544.0, 25440.0, 36984.0, 65512.0, 65518.0, 59136.0, 52713.0, 18336.0, 23.0, 4404.0, 65520.0, 62592.0, 23265.0, 25944.0, 37217.0, 20767.0, 33360.0, 44589.0, 7748.0, 16950.0, 17476.0, 21212.0, 46972.0, 32848.0, 57189.0, 54528.0, 50028.0, 60436.0, 36624.0, 23.0, 5328.0, 65520.0, 41952.0, 37800.0, 45984.0, 45692.0, 3914.0, 11175.0, 56492.0, 6626.0, 26402.0, 65512.0, 58528.0, 2172.0, 52728.0, 30104.0, 23.0, 57328.0, 22996.0, 24.0, 4128.0, 63632.0, 63216.0, 24.0, 8148.0, 14248.0, 18776.0, 22180.0, 34224.0, 51940.0, 65528.0, 64472.0, 56624.0, 50816.0, 46496.0, 43233.0, 40765.0, 39050.0, 37636.0, 37200.0, 36329.0, 32560.0, 3286.0, 7656.0, 13089.0, 12637.0, 8310.0, 14612.0, 24668.0, 31596.0, 38124.0, 38137.0, 22868.0, 31144.0, 40829.0, 45184.0, 43116.0, 55200.0, 65528.0, 39049.0, 52618.0, 50752.0, 46440.0, 30896.0, 24.0, 3738.0, 13234.0, 37134.0, 56234.0, 28912.0, 47188.0, 21946.0, 7054.0, 13533.0, 18240.0, 31084.0, 23248.0, 46692.0, 65520.0, 65520.0, 48444.0, 49928.0, 22717.0, 23.0, 5099.0, 20026.0, 44745.0, 54352.0, 31470.0, 32528.0, 53140.0, 39177.0, 32286.0, 30348.0, 37824.0, 16349.0, 30568.0, 40554.0, 25040.0, 19580.0, 12755.0, 25114.0, 31730.0, 25420.0, 15912.0, 20052.0, 49308.0, 20624.0, 16250.0, 17988.0, 31268.0, 65512.0, 64832.0, 23.0, 40868.0, 4108.0, 11295.0, 16648.0, 20640.0, 65504.0, 63020.0, 55532.0, 50016.0, 45888.0, 42776.0, 32676.0, 39308.0, 37768.0, 5150.0, 23.0, 7758.0, 59528.0, 59145.0, 55744.0, 50528.0, 46200.0, 33696.0, 21.0, 32996.0, 8167.0, 20728.0, 37460.0, 63528.0, 36852.0, 37736.0, 7572.0, 13857.0, 55320.0, 65516.0, 35884.0, 30028.0, 30112.0, 46276.0, 30368.0, 30912.0, 19858.0, 5208.0, 27586.0, 23548.0, 65512.0, 56472.0, 28760.0, 19444.0, 20666.0, 41032.0, 33125.0, 26464.0, 20276.0, 11172.0, 29004.0, 38592.0, 42180.0, 31009.0, 23761.0, 17442.0, 20260.0, 35625.0, 24128.0, 48916.0, 65528.0, 48776.0, 61720.0, 54596.0, 49328.0, 31512.0, 47476.0, 25.0, 23.0, 17400.0, 8197.0, 14226.0, 18744.0, 27328.0, 25808.0, 24962.0, 42710.0, 25893.0, 27390.0, 55764.0, 63340.0, 61985.0, 35984.0, 39764.0, 53596.0, 33904.0, 21308.0, 47836.0, 26572.0, 25124.0, 14821.0, 41336.0, 36088.0, 44100.0, 21878.0, 7048.0, 10237.0, 13560.0, 31546.0, 26506.0, 20962.0, 24944.0, 23516.0, 34472.0, 65512.0, 5475.0, 20668.0, 15346.0, 19714.0, 65520.0, 65520.0, 58732.0, 9413.0, 59112.0, 52608.0, 47848.0, 13436.0, 23.0, 62880.0, 24.0, 4419.0, 11417.0, 57136.0, 43884.0, 13192.0, 15092.0, 19424.0, 53991.0, 65512.0, 64356.0, 56528.0, 50740.0, 46400.0, 27168.0, 27520.0, 26112.0, 29704.0, 15576.0, 14152.0, 23110.0, 41874.0, 42284.0, 32634.0, 43188.0, 42088.0, 27097.0, 15321.0, 16458.0, 32514.0, 10952.0, 16308.0, 20316.0, 23328.0, 37980.0, 65512.0, 43715.0, 64104.0, 37308.0, 34856.0, 21048.0, 24236.0, 49858.0, 24540.0, 52292.0, 47560.0, 21974.0, 24.0, 6698.0, 13090.0, 14722.0, 65528.0, 64504.0, 56580.0, 22.0, 6465.0, 64608.0, 52402.0, 40790.0, 56228.0, 41752.0, 22.0, 6265.0, 65512.0, 63040.0, 23.0, 45058.0, 57332.0, 15785.0, 63824.0, 1429.0, 65512.0, 61552.0, 3462.0, 65518.0, 60416.0, 51608.0, 49408.0, 45408.0, 23.0, 4618.0, 8249.0, 14255.0, 18752.0, 23408.0, 48148.0, 22180.0, 40460.0, 34386.0, 21860.0, 46372.0, 65524.0, 62256.0, 23.0, 5972.0, 63252.0, 5987.0, 7522.0, 9469.0, 30752.0, 65513.0, 60608.0, 53722.0, 20904.0, 5713.0, 60232.0, 24.0, 5155.0, 12021.0, 51368.0, 65528.0, 2399.0, 10194.0, 65516.0, 65516.0, 9909.0, 30648.0, 64528.0, 56544.0, 19.0, 2052.0, 9756.0, 4956.0, 12015.0, 17144.0, 65512.0, 65524.0, 60648.0, 53752.0, 48684.0, 23.0, 5698.0, 10900.0, 16261.0, 20282.0, 42656.0, 63768.0, 65512.0, 57492.0, 46608.0, 17540.0, 46976.0, 19728.0, 2754.0, 6976.0, 27258.0, 13880.0, 64328.0, 24.0, 62920.0, 23.0, 1474.0, 6070.0, 2590.0, 49088.0, 58632.0, 23.0, 62528.0, 55008.0, 15484.0, 30.0, 8305.0, 65516.0, 58912.0, 58472.0, 30748.0, 49682.0, 25.0, 5678.0, 12368.0, 17350.0, 21100.0, 23916.0, 57816.0, 65512.0, 64360.0, 56553.0, 51122.0, 46713.0, 27681.0, 8426.0, 14040.0, 19035.0, 24436.0, 34352.0, 34888.0, 24216.0, 6398.0, 12882.0, 65512.0, 62196.0, 54848.0, 24.0, 5241.0, 65516.0, 2585.0, 10258.0, 65520.0, 64360.0, 17842.0, 25929.0, 35732.0, 36016.0, 9118.0, 13104.0, 26014.0, 22216.0, 51540.0, 27068.0, 19460.0, 33888.0, 28832.0, 41568.0, 55178.0, 47956.0, 39508.0, 30560.0, 12752.0, 17804.0, 29468.0, 26341.0, 33600.0, 39876.0, 27240.0, 60676.0, 48825.0, 47028.0, 52484.0, 42532.0, 32320.0, 23664.0, 30529.0, 34314.0, 36246.0, 36468.0, 32532.0, 24696.0, 20768.0, 19848.0, 31640.0, 33052.0, 39081.0, 38864.0, 46569.0, 29862.0, 23890.0, 17376.0, 30816.0, 39988.0, 25920.0, 28292.0, 35936.0, 30344.0, 35124.0, 35220.0, 38732.0, 37404.0, 36692.0, 30330.0, 40392.0, 40816.0, 30224.0, 29184.0, 26296.0, 30273.0, 27296.0, 28286.0, 40880.0, 55188.0, 63240.0, 44900.0, 18848.0, 11064.0, 11556.0, 10976.0, 20316.0, 28729.0, 32864.0, 36688.0, 38808.0, 41171.0, 38508.0, 40050.0, 25769.0, 29464.0, 35800.0, 41690.0, 37232.0, 41824.0, 36545.0, 35720.0, 29920.0, 27290.0, 30516.0, 24592.0, 30232.0, 33402.0, 36060.0, 35108.0, 33122.0, 35305.0, 35256.0, 26832.0, 30213.0, 37700.0, 43668.0, 37098.0, 39336.0, 21038.0, 22356.0, 29890.0, 33232.0, 48336.0, 44528.0, 38024.0, 25832.0, 7297.0, 21286.0, 32796.0, 31072.0, 36178.0, 58996.0, 43424.0, 14640.0, 23408.0, 8850.0, 17036.0, 26432.0, 33248.0, 37404.0, 51912.0, 65516.0, 35844.0, 34860.0, 23.0, 7666.0, 41764.0, 62032.0, 61664.0, 42568.0, 29596.0, 24844.0, 19268.0, 13742.0, 22944.0, 11844.0, 14378.0, 19176.0, 27954.0, 31770.0, 38817.0, 46260.0, 40416.0, 35076.0, 33824.0, 30092.0, 31660.0, 39664.0, 35456.0, 35056.0, 23848.0, 12397.0, 17574.0, 34664.0, 22884.0, 65516.0, 65528.0, 61100.0, 2033.0, 49276.0, 62496.0, 55084.0, 49680.0, 45640.0, 42592.0, 13580.0, 23.0, 12905.0, 17822.0, 22373.0, 65520.0, 25429.0, 60448.0, 53560.0, 36340.0, 18818.0, 16604.0, 50744.0, 21880.0, 5501.0, 3669.0, 10880.0, 16226.0, 20237.0, 34168.0, 43458.0, 42212.0, 45584.0, 37867.0, 28932.0, 41732.0, 41544.0, 32877.0, 44016.0, 49604.0, 48732.0, 11797.0, 13470.0, 22442.0, 8672.0, 65522.0, 59500.0, 23.0, 4602.0, 11649.0, 23120.0, 43208.0, 41724.0, 24448.0, 56824.0, 42148.0, 31338.0, 24848.0, 32020.0, 37860.0, 62432.0, 43049.0, 39400.0, 27300.0, 2046.0, 4336.0, 13826.0, 18696.0, 20376.0, 23382.0, 62016.0, 65524.0, 62524.0, 44232.0, 4491.0, 2795.0, 10315.0, 15865.0, 20020.0, 27120.0, 39032.0, 65528.0, 65520.0, 57864.0, 48480.0, 17868.0, 7509.0, 1784.0, 9510.0, 15245.0, 40720.0, 53848.0, 65520.0, 39512.0, 23418.0, 45772.0, 37384.0, 4953.0, 6328.0, 25172.0, 18420.0, 19200.0, 15588.0, 19813.0, 65520.0, 53676.0, 61332.0, 47344.0, 770.0, 8896.0, 14856.0, 19277.0, 23144.0, 61588.0, 58624.0, 64900.0, 56936.0, 51048.0, 46653.0, 43360.0, 40856.0, 24776.0, 4556.0, 21056.0, 16270.0, 17970.0, 2512.0, 9948.0, 15504.0, 19688.0, 22844.0, 25222.0, 27010.0, 28377.0, 65524.0, 64548.0, 56708.0, 50912.0, 46557.0, 43289.0, 40804.0, 38932.0, 13.0, 46820.0, 24.0, 16300.0, 35562.0, 59120.0, 22.0, 25544.0, 22483.0, 56844.0, 50818.0, 23.0, 704.0, 8616.0, 14496.0, 18912.0, 65508.0, 65520.0, 42576.0, 55716.0, 23.0, 5789.0, 13522.0, 16416.0, 20421.0, 51496.0, 50392.0, 16664.0, 51480.0, 54052.0, 65512.0, 57906.0, 24250.0, 24.0, 50872.0, 29052.0, 31264.0, 33402.0, 37284.0, 39856.0, 26020.0, 40708.0, 14325.0, 5010.0, 11909.0, 17046.0, 20892.0, 56364.0, 45856.0, 65508.0, 61131.0, 24832.0, 1029.0, 40044.0, 53024.0, 58768.0, 33060.0, 662.0, 65528.0, 60464.0, 53488.0, 48442.0, 44692.0, 23.0, 6157.0, 12693.0, 17585.0, 65520.0, 65512.0, 59016.0, 24.0, 58604.0, 25.0, 1704.0, 9474.0, 15208.0, 19512.0, 22732.0, 65520.0, 35628.0, 58232.0, 21.0, 2332.0, 9956.0, 65512.0, 59616.0, 3037.0, 10548.0, 39856.0, 65522.0, 59816.0, 24.0, 5904.0, 65508.0, 59368.0, 52768.0, 47932.0, 44304.0, 41556.0, 23.0, 59336.0, 58692.0, 24.0, 3814.0, 10946.0, 16265.0, 20265.0, 23272.0, 25556.0, 27272.0, 28566.0, 29552.0, 30292.0, 30860.0, 65512.0, 64020.0, 56353.0, 50660.0, 46384.0, 43164.0, 40712.0, 38856.0, 20.0, 1828.0, 65512.0, 60912.0, 19308.0, 685.0, 8736.0, 14587.0, 30109.0, 65512.0, 61048.0, 53476.0, 49000.0, 19.0, 1858.0, 9521.0, 65514.0, 41360.0, 46624.0, 55128.0, 49824.0, 46305.0, 32736.0, 43088.0, 30108.0, 22244.0, 25510.0, 17276.0, 16798.0, 22707.0, 24436.0, 19801.0, 27888.0, 19456.0, 12869.0, 13702.0, 18496.0, 37952.0, 45948.0, 50900.0, 51386.0, 51880.0, 19148.0, 9249.0, 36216.0, 61448.0, 15265.0, 14787.0, 29814.0, 9640.0, 15460.0, 65504.0, 7768.0, 46449.0
            34656.0,34352.0,34059.0,33860.0,33752.0,33888.0,34028.0,34108.0,34184.0,34130.0,34008.0,33856.0,33672.0,33424.0,33296.0,33106.0,32968.0,32800.0,32688.0,32584.0,32540.0,32434.0,32416.0,32380.0,32356.0,32288.0,32225.0,32185.0,32096.0,32032.0,31968.0,31936.0,32185.0,33000.0,34120.0,35124.0,35856.0,36260.0,36338.0,36320.0,36210.0,36068.0,35996.0,35828.0,35640.0,35364.0,35122.0,34864.0,34890.0,34960.0,35000.0,35008.0,34944.0,34844.0,34708.0,34540.0,34376.0,34228.0,34060.0,33893.0,33744.0,33600.0,33492.0,33376.0,33300.0,33200.0,33144.0,33088.0,32976.0,32920.0,32896.0,32840.0,32858.0,33196.0,33936.0,35008.0,35828.0,36362.0,36640.0,36616.0,36712.0,36544.0,36472.0,36416.0,36232.0,35930.0,35632.0,35348.0,35210.0,35192.0,35196.0,35192.0,35140.0,35080.0,34824.0,34760.0,34504.0,34368.0,34178.0,33984.0,33792.0,33548.0,33467.0,33361.0,33272.0,33185.0,33056.0,32972.0,32880.0,32796.0,32720.0,32608.0,32440.0,32360.0,32306.0,32192.0,32065.0,31949.0,31856.0,31745.0,31624.0,31552.0,31674.0,32352.0,33496.0,34676.0,35504.0,35940.0,36056.0,36008.0,35864.0,35656.0,35490.0,35378.0,35120.0,34837.0,34472.0,34168.0,34016.0,33976.0,34008.0,33952.0,33896.0,33768.0,33576.0,33472.0,33300.0,33024.0,32704.0,32516.0,32404.0,32264.0,32192.0,32112.0,32000.0,31933.0,31832.0,31766.0,31720.0,31664.0,31616.0,31540.0,31444.0,31332.0,31308.0,31200.0,30980.0,30882.0,30826.0,30826.0,30856.0,30816.0,30774.0,30776.0,30873.0,30849.0,30840.0,30812.0,30744.0,30804.0,30824.0,31083.0,31914.0,33104.0,34220.0,34920.0,35188.0,35124.0,34880.0,34576.0,34324.0,33968.0,33572.0,33212.0,32904.0,32744.0,32660.0,32808.0,32904.0,32984.0,32992.0,32912.0,32736.0,32733.0,32664.0,32504.0,32330.0,32136.0,31920.0,31728.0,31642.0,31648.0,31612.0,31608.0,31628.0,31560.0,31504.0,31472.0,31412.0,31418.0,31360.0,31308.0,31250.0,31172.0,31088.0,30976.0,30940.0,31280.0,32416.0,33808.0,35232.0,36056.0,36408.0,36432.0,36180.0,35936.0,35640.0,35440.0,35264.0,34968.0,34608.0,34120.0,33888.0,33696.0,33676.0,33696.0,33672.0,33644.0,33548.0,33428.0,33276.0,33104.0,32868.0,32616.0,32477.0,32296.0,32144.0,31944.0,31890.0,31832.0,31780.0,31720.0,31688.0,31672.0,31552.0,31528.0,31424.0,31360.0,31256.0,31252.0,31144.0,31041.0,30976.0,30937.0,30884.0,30824.0,30800.0,30784.0,30776.0,30756.0,30752.0,30737.0,30720.0,30752.0,30738.0,30642.0,30656.0,30976.0,32036.0,33544.0,34968.0,35884.0,36296.0,36272.0,35948.0,35530.0,35176.0,34834.0,34520.0,34288.0,33944.0,33656.0,33386.0,33280.0,33328.0,33420.0,33552.0,33536.0,33356.0,33272.0,33016.0,32864.0,32708.0,32493.0,32320.0,32144.0,32008.0,31914.0,31820.0,31756.0,31700.0,31648.0,31628.0,31576.0,31544.0,31492.0,31452.0,31392.0,31332.0,31216.0,31242.0,31200.0,31136.0,31104.0,31068.0,31033.0,31000.0,30936.0,30882.0,30840.0,30756.0,30820.0,30777.0,30704.0,30700.0,30672.0,30668.0,30965.0,31932.0,33372.0,34968.0,36052.0,36560.0,36524.0,36244.0,35800.0,35276.0,34965.0,34660.0,34356.0,34056.0,33696.0,33364.0,33200.0,33152.0,33248.0,33320.0,33384.0,33360.0,33184.0,33068.0,32832.0,32632.0,32420.0,32272.0,32088.0,31944.0,31784.0,31732.0,31632.0,31496.0,31416.0,31416.0,31356.0,31312.0,31260.0,31224.0,31200.0,31209.0,31172.0,31109.0,31080.0,31041.0,30984.0,30944.0,30868.0,30912.0,30868.0,30834.0,30828.0,30764.0,30714.0,30652.0,30696.0,30688.0,30784.0,31476.0,32776.0,34220.0,35572.0,36265.0,36424.0,36244.0,35848.0,35372.0,34882.0,34448.0,34202.0,33816.0,33424.0,33032.0,32824.0,32874.0,33028.0,33240.0,33364.0,33368.0,33284.0,33160.0,32938.0,32702.0,32487.0,32304.0,32116.0,31936.0,31792.0,31624.0,31493.0,31472.0,31384.0,31408.0,31336.0,31340.0,31284.0,31284.0,31264.0,31266.0,31224.0,31188.0,31156.0,31136.0,31064.0,31056.0,30996.0,30952.0,30888.0,30816.0,30776.0,30808.0,31180.0,32268.0,33748.0,35188.0,36128.0,36536.0,36484.0,36160.0,35638.0,35308.0,34920.0,34568.0,34232.0,33740.0,33428.0,33148.0,33056.0,33088.0,33248.0,33346.0,33424.0,33336.0,33300.0,33072.0,32888.0,32704.0,32476.0,32306.0,32128.0,31996.0,31860.0,31790.0,31644.0,31625.0,31572.0,31568.0,31496.0,31505.0,31420.0,31456.0,31416.0,31386.0,31368.0,31360.0,31300.0,31264.0,31208.0,31188.0,31132.0,31104.0,31050.0,31004.0,30968.0,30898.0,30890.0,30976.0,31474.0,32708.0,34282.0,35520.0,36484.0,36760.0,36596.0,36208.0,35748.0,35292.0,34864.0,34448.0,34096.0,33809.0,33456.0,33243.0,33200.0,33332.0,33516.0,33632.0,33640.0,33592.0,33536.0,33344.0,33120.0,32872.0,32616.0,32496.0,32328.0,32152.0,32032.0,31968.0,31904.0,31825.0,31860.0,31810.0,31816.0,31784.0,31769.0,31720.0,31721.0,31716.0,31634.0,31648.0,31600.0,31544.0,31488.0,31424.0,31304.0,31274.0,31184.0,31264.0,31524.0,32420.0,33794.0,35152.0,35962.0,36396.0,36304.0,35844.0,35488.0,34952.0,34624.0,34256.0,33832.0,33418.0,33088.0,32970.0,33040.0,33280.0,33512.0,33664.0,33728.0,33616.0,33440.0,33256.0,32948.0,32792.0,32616.0,32476.0,32300.0,32184.0,32020.0,32020.0,31972.0,31936.0,31936.0,31920.0,31868.0,31864.0,31848.0,31836.0,31792.0,31744.0,31680.0,31656.0,31636.0,31584.0,31544.0,31496.0,31465.0,31428.0,31338.0,31340.0,31284.0,31250.0,31321.0,31784.0,32952.0,34426.0,35908.0,36816.0,37144.0,37016.0,36672.0,36220.0,35800.0,35480.0,35168.0,34890.0,34460.0,34228.0,33960.0,33884.0,34098.0,34220.0,34308.0,34340.0,34240.0,33976.0,33780.0,33652.0,33444.0,33224.0,33068.0,32896.0,32776.0,32688.0,32600.0,32540.0,32528.0,32476.0,32416.0,32424.0,32384.0,32282.0,32314.0,32276.0,32232.0,32176.0,32152.0,32020.0,32010.0,31922.0,31900.0,31864.0,31812.0,31752.0,31740.0,31696.0,31660.0,31588.0,31577.0,31596.0,31592.0,31490.0,31529.0,31496.0,31528.0,31808.0,32926.0,34360.0,35880.0,36912.0,37288.0,37248.0,36928.0,36512.0,36075.0,35714.0,35352.0,35168.0,34912.0,34533.0,34376.0,34320.0,34284.0,34528.0,34649.0,34692.0,34616.0,34393.0,34280.0,34050.0,33856.0,33616.0,33408.0,33320.0,33162.0,33056.0,32956.0,32932.0,32880.0,32848.0,32824.0,32796.0,32752.0,32664.0,32681.0,32656.0,32584.0,32540.0,32498.0,32426.0,32372.0,32264.0,32234.0,32129.0,32130.0,32060.0,32084.0,32028.0,31986.0,31944.0,31872.0,31824.0,31753.0,31800.0,32076.0,32928.0,34268.0,35536.0,36294.0,36722.0,36708.0,36424.0,35940.0,35618.0,35232.0,34872.0,34520.0,34106.0,33824.0,33624.0,33777.0,34064.0,34308.0,34388.0,34368.0,34248.0,34132.0,33896.0,33688.0,33448.0,33280.0,33096.0,32930.0,32824.0,32704.0,32602.0,32545.0,32576.0,32576.0,32536.0,32512.0,32481.0,32472.0,32396.0,32348.0,32296.0,32196.0,32184.0,32089.0,32093.0,32032.0,31968.0,31914.0,31884.0,31848.0,31832.0,31792.0,31760.0,31748.0,31700.0,31672.0,31600.0,31612.0,31578.0,31652.0,32296.0,33640.0,35204.0,36544.0,37188.0,37464.0,37200.0,36888.0,36464.0,36060.0,35792.0,35480.0,35400.0,35072.0,34760.0,34632.0,34532.0,34708.0,34820.0,34888.0,34868.0,34736.0,34568.0,34268.0,34120.0,33924.0,33732.0,33536.0,33356.0,33240.0,33132.0,33056.0,32988.0,32904.0,32840.0,32840.0,32818.0,32778.0,32744.0,32704.0,32633.0,32577.0,32504.0,32396.0,32392.0,32328.0,32244.0,32172.0,32128.0,32080.0,32050.0,31992.0,31968.0,31932.0,31864.0,31808.0,31824.0,31764.0,31712.0,31688.0,31712.0,32000.0,32984.0,34376.0,35699.0,36672.0,37072.0,37004.0,36569.0,36312.0,35848.0,35496.0,35112.0,34904.0,34528.0,34204.0,34104.0,34136.0,34368.0,34616.0,34840.0,34888.0,34736.0,34665.0,34506.0,34240.0,34065.0,33840.0,33664.0,33512.0,33368.0,33237.0,33160.0,33112.0,33068.0,33024.0,32976.0,32920.0,32960.0,32900.0,32884.0,32840.0,32708.0,32696.0,32641.0,32596.0,32496.0,32421.0,32316.0,32240.0,32124.0,32124.0,32100.0,32700.0,33828.0,35248.0,36402.0,37152.0,37321.0,37196.0,36880.0,36468.0,36116.0,35748.0,35624.0,35320.0,35008.0,34752.0,34700.0,34776.0,35020.0,35184.0,35274.0,35176.0,35056.0,34920.0,34720.0,34508.0,34220.0,34104.0,33936.0,33772.0,33644.0,33584.0,33504.0,33410.0,33428.0,33416.0,33352.0,33300.0,33168.0,33132.0,33088.0,32984.0,32920.0,32824.0,32770.0,32680.0,32612.0,32556.0,32440.0,32364.0,32384.0,32252.0,32241.0,32133.0,32104.0,32061.0,32193.0,32840.0,34226.0,35696.0,36820.0,37480.0,37672.0,37456.0,37132.0,36804.0,36544.0,36252.0,36224.0,36056.0,35842.0,35560.0,35372.0,35384.0,35496.0,35538.0,35576.0,35524.0,35384.0,35212.0,35001.0,34696.0,34584.0,34308.0,34202.0,34024.0,33896.0,33792.0,33652.0,33624.0,33536.0,33408.0,33440.0,33402.0,33302.0,33226.0,33184.0,33096.0,33012.0,32916.0,32801.0,32680.0,32652.0,32572.0,32400.0,32388.0,32330.0,32256.0,32208.0,32168.0,32128.0,32052.0,32020.0,31968.0,31904.0,31852.0,31804.0,31720.0,31688.0,32032.0,33040.0,34428.0,35672.0,36660.0,37033.0,36936.0,36696.0,36312.0,36004.0,35752.0,35584.0,35362.0,35096.0,34744.0,34666.0,34620.0,34756.0,34944.0,35028.0,35048.0,34866.0,34720.0,34604.0,34370.0,34105.0,33977.0,33784.0,33636.0,33500.0,33388.0,33312.0,33298.0,33237.0,33194.0,33146.0,33033.0,33016.0,32972.0,32896.0,32832.0,32712.0,32620.0,32548.0,32448.0,32384.0,32329.0,32235.0,32092.0,32060.0,32000.0,31940.0,31840.0,31800.0,31738.0,31692.0,31888.0,32588.0,33740.0,35108.0,36068.0,36513.0,36576.0,36306.0,35940.0,35594.0,35368.0,35272.0,35072.0,34804.0,34516.0,34320.0,34330.0,34440.0,34576.0,34724.0,34676.0,34580.0,34418.0,34208.0,34020.0,33824.0,33632.0,33448.0,33280.0,33120.0,33044.0,32928.0,32908.0,32872.0,32810.0,32764.0,32688.0,32618.0,32552.0,32480.0,32384.0,32324.0,32229.0,32148.0,32064.0,32000.0,31896.0,31852.0,31728.0,31673.0,31610.0,31568.0,31524.0,31530.0,31464.0,31400.0,31384.0,31344.0,31276.0,31188.0,31156.0,31136.0,31268.0,31948.0,33248.0,34716.0,35844.0,36468.0,36473.0,36345.0,36036.0,35658.0,35408.0,35168.0,35168.0,35032.0,34844.0,34560.0,34348.0,34352.0,34432.0,34404.0,34516.0,34440.0,34340.0,34136.0,33936.0,33760.0,33576.0,33400.0,33210.0,33024.0,32928.0,32836.0,32712.0,32680.0,32640.0,32547.0,32480.0,32486.0,32408.0,32356.0,32274.0,32192.0,32109.0,32044.0,31952.0,31888.0,31810.0,31728.0,31672.0,31600.0,31553.0,31488.0,31444.0,31416.0,31353.0,31276.0,31304.0,31238.0,31152.0,31140.0,31048.0,31009.0,30996.0,30996.0,31348.0,32268.0,33541.0,34816.0,35537.0,35912.0,35764.0,35448.0,35204.0,34768.0,34560.0,34330.0,34088.0,33784.0,33504.0,33300.0,33360.0,33596.0,33792.0,33965.0,34000.0,33896.0,33656.0,33536.0,33304.0,33088.0,32888.0,32672.0,32546.0,32376.0,32360.0,32300.0,32224.0,32236.0,32216.0,32186.0,32140.0,32100.0,31984.0,31988.0,31924.0,31802.0,31784.0,31711.0,31600.0,31572.0,31488.0,31384.0,31304.0,31216.0,31164.0,31177.0,31306.0,32000.0,33124.0,34256.0,35036.0,35412.0,35320.0,35072.0,34616.0,34336.0,34012.0,33644.0,33320.0,33026.0,32780.0,32648.0,32842.0,33072.0,33256.0,33348.0,33242.0,33125.0,32960.0,32746.0,32515.0,32404.0,32192.0,32112.0,31992.0,31876.0,31746.0,31712.0,31660.0,31656.0,31596.0,31540.0,31569.0,31512.0,31532.0,31474.0,31500.0,31400.0,31332.0,31321.0,31240.0,31176.0,31104.0,31040.0,31008.0,30906.0,30890.0,30868.0,30824.0,30960.0,31692.0,33072.0,34498.0,35570.0,36024.0,35984.0,35616.0,35156.0,34664.0,34248.0,33996.0,33632.0,33312.0,33056.0,33028.0,33152.0,33376.0,33550.0,33565.0,33544.0,33418.0,33248.0,32948.0,32832.0,32608.0,32456.0,32284.0,32144.0,32044.0,31972.0,31938.0,31864.0,31848.0,31896.0,31858.0,31808.0,31712.0,31652.0,31532.0,31532.0,31492.0,31800.0,32864.0,34369.0,35752.0,36632.0,36992.0,36848.0,36568.0,36188.0,36032.0,35800.0,35744.0,35596.0,35352.0,34912.0,34728.0,34600.0,34532.0,34652.0,34585.0,34470.0,34400.0,34244.0,33960.0,33756.0,33616.0,33433.0,33264.0,33096.0,32952.0,32836.0,32784.0,32708.0,32636.0,32616.0,32516.0,32404.0,32388.0,32360.0,32260.0,32160.0,32068.0,32000.0,31856.0,31808.0,31716.0,31672.0,31576.0,31504.0,31488.0,31449.0,31405.0,31346.0,31300.0,31272.0,31227.0

    ));

    //ECG
    ArrayList<Double> data2 = new ArrayList<Double>(Arrays.<Double>asList(
            53708.0, 45314.0, 39000.0, 49032.0, 40676.0, 32564.0, 25426.0, 16796.0, 2790.0, 29248.0, 33300.0, 28808.0, 27662.0, 23160.0, 20800.0, 32928.0, 44000.0, 34588.0, 29920.0, 23697.0, 19669.0, 17768.0, 38736.0, 29396.0, 24980.0, 19844.0, 16484.0, 18816.0, 46972.0, 37570.0, 32348.0, 26560.0, 21230.0, 33156.0, 49768.0, 39164.0, 34748.0, 27385.0, 22044.0, 38912.0, 46864.0, 36800.0, 32852.0, 25108.0, 20416.0, 37612.0, 46912.0, 37920.0, 37914.0, 30356.0, 15218.0, 34954.0, 40608.0, 22042.0, 151.0, 151.0, 152.0, 151.0, 153.0, 151.0, 151.0, 151.0, 151.0, 151.0, 149.0, 151.0, 152.0, 151.0, 151.0, 149.0, 152.0, 151.0, 151.0, 152.0, 151.0, 150.0, 152.0, 151.0, 151.0, 150.0, 151.0, 151.0, 151.0, 153.0, 65416.0, 65424.0, 65416.0, 65412.0, 65412.0, 65412.0, 65408.0, 65416.0, 65416.0, 65416.0, 65416.0, 65408.0, 65410.0, 65416.0, 60356.0, 57904.0, 65408.0, 65412.0, 65416.0, 65408.0, 65408.0, 65412.0, 65412.0, 65424.0, 65420.0, 65416.0, 65416.0, 65420.0, 65408.0, 65424.0, 65372.0, 47064.0, 44072.0, 11864.0, 152.0, 150.0, 151.0, 150.0, 151.0, 151.0, 27085.0, 9820.0, 24106.0, 65418.0, 49712.0, 26578.0, 17547.0, 16108.0, 59724.0, 38640.0, 24429.0, 16100.0, 150.0, 52140.0, 46224.0, 24626.0, 40571.0, 25972.0, 47684.0, 43320.0, 27434.0, 24470.0, 152.0, 18881.0, 59968.0, 41084.0, 34440.0, 27748.0, 7043.0, 49392.0, 65124.0, 52928.0, 36612.0, 17096.0, 26813.0, 49176.0, 41865.0, 36280.0, 16104.0, 151.0, 49240.0, 43338.0, 43408.0, 36699.0, 12086.0, 43368.0, 47332.0, 39634.0, 37954.0, 18670.0, 10090.0, 49434.0, 47824.0, 44616.0, 22208.0, 7810.0, 43061.0, 31922.0, 32688.0, 39968.0, 28477.0, 26792.0, 25340.0, 32608.0, 29916.0, 18477.0, 25085.0, 32476.0, 31304.0, 21185.0, 8524.0, 14244.0, 15956.0, 13678.0, 15498.0, 29480.0, 13882.0, 43978.0, 32054.0, 10336.0, 150.0, 151.0, 4243.0, 26624.0, 49766.0, 53595.0, 151.0, 151.0, 28400.0, 5160.0, 151.0, 2252.0, 380.0, 44040.0, 27061.0, 11708.0, 14152.0, 13322.0, 46756.0, 60852.0, 37372.0, 33708.0, 24953.0, 23924.0, 43690.0, 5952.0, 151.0, 151.0, 151.0, 39152.0, 14412.0, 8005.0, 8249.0, 5310.0, 53752.0, 35777.0, 15032.0, 20766.0, 30836.0, 65408.0, 65416.0, 65408.0, 63370.0, 65418.0, 65418.0, 65412.0, 65408.0, 65416.0, 65416.0, 65412.0, 65408.0, 52736.0, 48196.0, 38856.0, 58464.0, 48456.0, 46745.0, 60704.0, 60507.0, 55408.0, 23610.0, 44924.0, 45332.0, 23928.0, 57680.0, 31028.0, 31500.0, 38024.0, 29064.0, 65416.0, 65416.0, 65416.0, 58536.0, 38288.0, 60336.0, 52704.0, 39448.0, 20232.0, 11494.0, 16872.0, 41305.0, 39688.0, 53016.0, 40920.0, 14840.0, 50020.0, 64370.0, 54644.0, 37268.0, 23072.0, 4373.0, 742.0, 153.0, 151.0, 151.0, 149.0, 151.0, 152.0, 11344.0, 12440.0, 12901.0, 5140.0, 150.0, 19064.0, 56896.0, 43393.0, 27404.0, 18644.0, 16908.0, 33332.0, 47948.0, 52848.0, 55592.0, 61024.0, 65416.0, 65408.0, 65424.0, 65416.0, 57208.0, 37962.0, 30658.0, 35912.0, 27844.0, 20544.0, 15648.0, 12878.0, 7300.0, 16889.0, 26960.0, 29716.0, 36536.0, 38848.0, 42824.0, 64032.0, 60008.0, 49720.0, 44516.0, 40582.0, 41844.0, 37440.0, 23764.0, 19726.0, 15700.0, 12811.0, 27104.0, 25026.0, 13824.0, 6504.0, 9627.0, 22180.0, 36316.0, 40268.0, 44648.0, 52196.0, 57624.0, 62192.0, 65416.0, 65416.0, 54084.0, 38472.0, 31496.0, 26348.0, 20396.0, 15466.0, 15336.0, 3326.0, 27012.0, 24164.0, 14920.0, 10046.0, 4831.0, 11694.0, 46512.0, 48568.0, 58152.0, 57796.0, 46592.0, 44876.0, 37568.0, 33322.0, 32472.0, 24963.0, 23904.0, 31947.0, 19944.0, 14123.0, 149.0, 6180.0, 43176.0, 45248.0, 51280.0, 47128.0, 40676.0, 39736.0, 31108.0, 19372.0, 11538.0, 3231.0, 7282.0, 8477.0, 151.0, 151.0, 151.0, 23748.0, 25520.0, 149.0, 150.0, 148.0, 151.0, 150.0, 151.0, 150.0, 149.0, 4058.0, 26784.0, 14600.0, 15597.0, 15656.0, 16334.0, 31140.0, 22091.0, 21964.0, 23422.0, 23980.0, 33264.0, 27252.0, 26028.0, 26168.0, 25944.0, 37000.0, 29588.0, 27688.0, 27474.0, 28104.0, 39388.0, 30536.0, 28257.0, 27736.0, 27629.0, 35664.0, 28884.0, 27824.0, 28560.0, 29633.0, 38680.0, 30944.0, 29780.0, 29588.0, 29160.0, 32912.0, 29828.0, 28292.0, 26580.0, 27232.0, 31691.0, 27165.0, 26920.0, 25892.0, 28376.0, 31782.0, 27964.0, 27388.0, 27520.0, 31264.0, 32128.0, 30700.0, 31272.0, 30784.0, 37624.0, 34260.0, 30008.0, 28800.0, 27837.0, 36056.0, 30940.0, 28788.0, 28224.0, 28020.0, 36492.0, 30370.0, 28762.0, 28552.0, 28260.0, 34956.0, 29428.0, 28792.0, 27836.0, 31461.0, 36244.0, 39840.0, 65408.0, 63924.0, 64332.0, 65418.0, 65416.0, 65408.0, 65416.0, 65424.0, 65408.0, 151.0, 151.0, 153.0, 151.0, 150.0, 151.0, 152.0, 152.0, 151.0, 150.0, 150.0, 151.0, 150.0, 150.0, 152.0, 153.0, 151.0, 619.0, 8330.0, 14840.0, 19540.0, 23008.0, 25516.0, 27272.0, 28548.0, 29546.0, 30268.0, 30748.0, 31161.0, 31426.0, 31724.0, 31824.0, 31912.0, 32032.0, 32109.0, 32116.0, 32160.0, 32235.0, 32308.0, 32332.0, 32340.0, 32414.0, 32370.0, 32480.0, 32376.0, 32420.0, 32388.0, 32417.0, 32508.0, 32400.0, 32484.0, 32416.0, 32484.0, 32484.0, 32480.0, 32544.0, 32492.0, 32521.0, 32537.0, 32496.0, 32553.0, 32545.0, 32444.0, 32549.0, 32516.0, 32526.0, 32510.0, 32584.0, 32621.0, 32584.0, 32534.0, 32544.0, 32596.0, 32592.0, 32569.0, 32548.0, 32554.0, 32576.0, 32576.0, 32568.0, 32585.0, 32704.0, 32561.0, 32602.0, 32596.0, 32568.0, 32652.0, 32532.0, 32616.0, 32560.0, 32588.0, 32536.0, 32600.0, 32628.0, 32626.0, 32584.0, 32604.0, 32600.0, 32648.0, 32616.0, 32596.0, 32640.0, 32612.0, 32612.0, 32682.0, 32608.0, 32504.0, 32544.0, 32604.0, 32688.0, 32466.0, 32680.0, 32608.0, 32634.0, 32636.0, 32596.0, 32614.0, 32600.0, 32656.0, 32660.0, 32648.0, 32700.0, 32596.0, 32648.0, 32651.0, 32626.0, 32621.0, 32672.0, 32716.0, 32633.0, 32673.0, 32700.0, 32580.0, 32608.0, 32677.0, 32688.0, 32624.0, 32668.0, 32640.0, 32653.0, 32596.0, 32672.0, 32668.0, 32664.0, 32664.0, 32641.0, 32656.0, 32652.0, 32646.0, 32712.0, 32620.0, 32632.0, 32700.0, 32732.0, 32700.0, 32648.0, 32680.0, 32752.0, 32640.0, 32622.0, 32656.0, 32560.0, 32713.0, 32628.0, 32684.0, 32732.0, 32664.0, 32660.0, 32324.0, 32680.0, 32448.0, 32740.0, 32704.0, 32696.0, 32692.0, 32644.0, 32617.0, 32578.0, 32688.0, 32664.0, 32736.0, 32684.0, 32672.0, 32697.0, 32621.0, 32664.0, 32712.0, 32756.0, 32764.0, 32669.0, 32698.0, 32656.0, 32688.0, 32648.0, 32729.0, 32697.0, 32716.0, 32644.0, 32648.0, 32668.0, 32624.0, 32736.0, 32729.0, 32656.0, 32744.0, 32730.0, 32640.0, 32660.0, 32665.0, 32696.0, 32657.0, 32808.0, 32594.0, 32576.0, 32740.0, 32710.0, 32686.0, 32644.0, 32716.0, 32704.0, 32668.0, 32737.0, 32704.0, 32680.0, 32740.0, 32632.0, 32704.0, 32697.0, 32612.0, 32704.0, 32664.0, 32792.0, 32690.0, 32656.0, 32772.0, 32731.0, 32708.0, 32692.0, 32680.0, 32668.0, 32696.0, 32716.0, 32737.0, 32744.0, 32708.0, 32716.0, 32720.0, 32800.0, 32748.0, 32642.0, 32672.0, 32740.0, 32672.0, 32661.0, 32552.0, 32700.0, 32677.0, 32608.0, 32781.0, 32624.0, 32673.0, 32724.0, 32676.0, 32660.0, 32720.0, 32640.0, 32720.0, 32736.0, 32797.0, 32720.0, 32696.0, 32760.0, 32680.0, 32750.0, 32362.0, 32740.0, 32728.0, 32691.0, 32704.0, 32800.0, 32613.0, 32656.0, 32700.0, 32766.0, 32740.0, 32680.0, 32616.0, 32741.0, 32684.0, 32673.0, 32688.0, 32793.0, 32715.0, 32713.0, 32711.0, 32644.0, 32601.0, 32690.0, 32650.0, 32668.0, 32704.0, 32720.0, 32724.0, 32680.0, 32722.0, 32691.0, 32672.0, 32748.0, 32398.0, 32700.0, 32697.0, 32797.0, 32708.0, 32672.0, 32704.0, 32704.0, 32288.0, 32512.0, 32682.0, 32754.0, 32673.0, 32545.0, 32736.0, 32644.0, 32688.0, 32476.0, 32728.0, 32728.0, 32704.0, 32700.0, 32556.0, 32672.0, 32708.0, 32709.0, 32737.0, 32694.0, 32688.0, 32624.0, 32696.0, 32686.0, 32700.0, 32754.0, 32777.0, 32688.0, 32728.0, 32756.0, 32803.0, 32713.0, 32780.0, 32700.0, 32716.0, 32728.0, 32722.0, 32696.0, 32729.0, 32712.0, 32676.0, 32713.0, 32730.0, 32722.0, 32712.0, 32732.0, 32713.0, 32696.0, 32721.0, 32668.0, 32664.0, 32669.0, 32712.0, 32708.0, 32681.0, 32620.0, 32677.0, 32700.0, 32732.0, 32673.0, 32696.0, 32749.0, 32688.0, 32616.0, 32704.0, 32704.0, 32666.0, 32752.0, 32728.0, 32636.0, 32728.0, 32716.0, 32709.0, 32784.0, 32740.0, 32820.0, 32715.0, 32540.0, 32716.0, 32736.0, 32696.0, 32736.0, 32728.0, 32770.0, 32716.0, 32737.0, 32736.0, 32732.0, 32728.0, 32728.0, 32700.0, 32765.0, 32696.0, 32708.0, 32728.0, 32717.0, 32709.0, 32544.0, 32722.0, 32690.0, 32697.0, 32709.0, 32708.0, 32741.0, 32724.0, 32748.0, 32728.0, 32697.0, 32740.0, 32704.0, 32756.0, 32688.0, 32704.0, 32672.0, 32778.0, 32668.0, 32714.0, 32690.0, 32705.0, 32676.0, 32736.0, 32756.0, 32741.0, 32736.0, 32644.0, 32750.0, 32744.0, 32748.0, 32784.0, 32740.0, 32640.0, 32744.0, 32784.0, 32730.0, 32778.0, 32780.0, 65416.0, 65416.0, 65416.0, 65416.0, 65418.0, 65412.0, 65428.0, 65424.0, 65424.0, 65408.0, 65424.0, 65416.0, 65408.0, 65408.0, 65416.0, 65408.0, 65424.0, 65408.0, 65422.0, 65400.0, 65418.0, 65408.0, 65418.0, 65408.0, 65408.0, 65408.0, 65424.0, 65420.0, 65408.0, 65408.0, 65408.0, 36632.0, 151.0, 151.0, 151.0, 152.0, 150.0, 149.0, 150.0, 150.0, 151.0, 149.0, 150.0, 151.0, 151.0, 149.0, 147.0, 149.0, 150.0, 151.0, 152.0, 153.0, 149.0, 149.0, 150.0, 150.0, 149.0, 150.0, 152.0, 149.0, 151.0, 148.0, 150.0, 150.0, 150.0, 2634.0, 10563.0, 16592.0, 20946.0, 24152.0, 26284.0, 27916.0, 29181.0, 29962.0, 30644.0, 31016.0, 31242.0, 31640.0, 31808.0, 32016.0, 32092.0, 32178.0, 32192.0, 32293.0, 32352.0, 32332.0, 32376.0, 32392.0, 32432.0, 32456.0, 32480.0, 32477.0, 32568.0, 32512.0, 40944.0, 65408.0, 65408.0, 65424.0, 65420.0, 65416.0, 65412.0, 65410.0, 65416.0, 65408.0, 65416.0, 65424.0, 65409.0, 65400.0, 65408.0, 65420.0, 65408.0, 65408.0, 34448.0, 149.0, 31352.0, 65412.0, 65416.0, 65420.0, 65420.0, 65412.0, 65416.0, 65408.0, 65404.0, 65412.0, 65424.0, 60808.0, 65408.0, 65416.0, 65424.0, 65416.0, 65416.0, 65432.0, 65416.0, 65408.0, 65412.0, 65416.0, 65408.0, 42796.0, 33224.0, 61080.0, 26580.0, 55840.0, 12008.0, 151.0, 149.0, 150.0, 150.0, 272.0, 19204.0, 21792.0, 18530.0, 16746.0, 12274.0, 5219.0, 46852.0, 51848.0, 35800.0, 32921.0, 57344.0, 65424.0, 65412.0, 48074.0, 151.0, 150.0, 150.0, 150.0, 149.0, 149.0, 151.0, 151.0, 150.0, 151.0, 148.0, 151.0, 151.0, 149.0, 151.0, 151.0, 149.0, 150.0, 151.0, 150.0, 65416.0, 65408.0, 65408.0, 65416.0, 65408.0, 65416.0, 65416.0, 65401.0, 65416.0, 65410.0, 42632.0, 149.0, 149.0, 150.0, 150.0, 150.0, 149.0, 151.0, 150.0, 149.0, 151.0, 36188.0, 45848.0, 56844.0, 28256.0, 151.0, 150.0, 150.0, 150.0, 150.0, 150.0, 2928.0, 18016.0, 23516.0, 23040.0, 29140.0, 41692.0, 46888.0, 7437.0, 151.0, 42584.0, 65426.0, 65416.0, 65416.0, 65408.0, 65408.0, 65420.0, 65424.0, 65420.0, 65416.0, 65416.0, 65416.0, 65416.0, 65420.0, 57364.0, 37024.0, 63976.0, 65416.0, 65416.0, 65412.0, 65416.0, 65416.0, 65424.0, 24808.0, 41764.0, 58936.0, 57456.0, 65408.0, 65416.0, 65416.0, 65416.0, 19976.0, 151.0, 150.0, 151.0, 150.0, 151.0, 65416.0, 65408.0, 65416.0, 65418.0, 65416.0, 65410.0, 65400.0, 65416.0, 65408.0, 65412.0, 65416.0, 65424.0, 65416.0, 65424.0, 65412.0, 65408.0, 65408.0, 51835.0, 151.0, 149.0, 150.0, 149.0, 150.0, 150.0, 149.0, 150.0, 149.0, 151.0, 150.0, 151.0, 11212.0, 53280.0, 60018.0, 60320.0, 53912.0, 43864.0, 64904.0, 62616.0, 32532.0, 20648.0, 12344.0, 28856.0, 37160.0, 33040.0, 25888.0, 7356.0, 16968.0, 31436.0, 29384.0, 31044.0, 33218.0, 50024.0, 65416.0, 65408.0, 65416.0, 56696.0, 38968.0, 45744.0, 29495.0, 21116.0, 151.0, 151.0, 4162.0, 150.0, 237.0, 10942.0, 18268.0, 38344.0, 28338.0, 26038.0, 15512.0, 9708.0, 35816.0, 31136.0, 29952.0, 21724.0, 9800.0, 29876.0, 27284.0, 26404.0, 29488.0, 30298.0, 53136.0, 54256.0, 58832.0, 63480.0, 50464.0, 65408.0, 65424.0, 65416.0, 65416.0, 64104.0, 64090.0

    ));

    //datos de un sensor
    SignalDetector signalDetector = new SignalDetector();
    //datos del otro sensor
    SignalDetector signalDetector2 = new SignalDetector();

    int lag = 30;
    double threshold = 5;
    double influence = 0;

    //datos de un sensor bvp
    HashMap<String, List> resultsMap = signalDetector.analyzeDataForSignals(data, lag, threshold, influence);
    List<Integer> signalsList = resultsMap.get("signals");

    //datos del otro sensor ecg

    //MonitorHeartRate ECG = new MonitorHeartRate();
    //ArrayList<Double> data2 = ECG.data;

    HashMap<String, List> resultsMap2 = signalDetector2.analyzeDataForSignals(data2, lag, threshold, influence);
    List<Integer> signalsList2 = resultsMap2.get("signals");


    int dif = 0, dif2 = 0;
    int pulsaciones = 0, pulsaciones_ = 0;
    int pulsaciones2 = 0, pulsaciones_2 = 0;

    int ppm = 0, ppm2 = 0;
    int sample_rate = 50;
    int j = 0;
    int i = 0;

    int value_i = 0;
    int value_rate = 1;

    double arrayTiempos[] = new double[40];

    int presion_arterial1 = 0;
    int presion_arterial2 = 0;

    boolean flag1 = true, flag2 = true;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_monitor_blood_pressure);
        Toolbar toolbar = (Toolbar) findViewById(R.id.bloodPressureToolbar);
        setSupportActionBar(toolbar);
        toolbar.setNavigationIcon(R.drawable.ic_back);

        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                finish();
            }
        });

        TextView estado = (TextView)findViewById(R.id.estado);
        estado.setText("presi√≥n alta");

        final TextView hist1 = (TextView)findViewById(R.id.hist1);
        final TextView hist2 = (TextView)findViewById(R.id.hist2);

        final TextView textView = (TextView)findViewById(R.id.bp_medicion_mmhg);
        final TextView textView2 = (TextView)findViewById(R.id.bp_medicion_mmhg2);

        //arreglo tiempos
        //double arrayTiempos[] = new double[40];

        //ecg
        //double valor = 0;
        //int dif = 0;
        //int ppm = 0;
        //int pulsaciones = 0;
        //int pulsaciones2 = 0;

        //bvp
        //double valor2 = 0;
        //int dif2 = 0;
        //int ppm2 = 0; //unidad medida sensor bvp
        //int pulsaciones_ = 0;
        //int pulsaciones_2 = 0;

        //int sample_rate = 50;
        //int j = 0;
/*
        for (int i = 0; i < signalsList2.size(); i++) {
            //ECG
            dif = dif + 1;
            if ((i + 1) != signalsList.size()){
                if (signalsList.get(i) == 0){
                    if (signalsList.get(i + 1) == 1){ //halla peak
                        valor = signalsList.get(i);
                        pulsaciones = pulsaciones + 1;
                        pulsaciones2 = pulsaciones2 + 1;
                        //System.out.println("PULSACION EN LA MEDICION: "+ i);
                        System.out.println("VALOR DE DIF " + dif);
                        arrayTiempos[j] = Double.valueOf(dif);
                        dif = 0;

                    }
                    else if(signalsList.get(i+1) == -1){
                        continue;
                    }
                }
                else if(signalsList.get(i) == -1){
                    if (signalsList.get(i+1) == 1){ //halla peak
                        valor = signalsList.get(i);
                        pulsaciones = pulsaciones + 1;
                        pulsaciones2 = pulsaciones2 + 1;
                        //System.out.println("PULSACION EN LA MEDICION: "+ i);
                        System.out.println("VALOR DE DIF " + dif);
                        arrayTiempos[j] = Double.valueOf(dif);
                        dif = 0;
                    }
                    else if(signalsList.get(i+1) == 0){
                        continue;
                    }
                }
                else if(signalsList.get(i) == 1){
                    continue;
                }

            }
            if (i % (sample_rate*2) == 0){
                ppm = (ppm + (pulsaciones2*60/2))/2;
                System.out.println("PPM ES: "+ ppm);
                System.out.println("ENTRA AL i = "+ i);
                pulsaciones2 = 0;
            }

            //BVP
            dif2 = dif2 + 1;
            if ((i + 1) != signalsList2.size()){
                if (signalsList2.get(i) == 0){
                    if (signalsList2.get(i + 1) == 1){ //halla peak
                        valor = signalsList2.get(i);
                        pulsaciones_ = pulsaciones_ + 1;
                        pulsaciones_2 = pulsaciones_2 + 1;
                        //System.out.println("PULSACION EN LA MEDICION: "+ i);
                        System.out.println("VALOR DE DIF2" + dif2);
                        arrayTiempos[j] = (Double.valueOf(dif2) - arrayTiempos[j])/sample_rate; //ojo con distintos datasets
                        dif2 = 0;
                        j = j + 1;
                    }
                    else if(signalsList2.get(i+1) == -1){
                        continue;
                    }
                }
                else if(signalsList2.get(i) == -1){
                    if (signalsList2.get(i+1) == 1){ //halla peak
                        valor2 = signalsList2.get(i);
                        pulsaciones_ = pulsaciones_ + 1;
                        pulsaciones_2 = pulsaciones_2 + 1;
                        //System.out.println("PULSACION EN LA MEDICION: "+ i);
                        System.out.println("VALOR DE DIF2" + dif2);
                        arrayTiempos[j] = (Double.valueOf(dif2) - arrayTiempos[j])/sample_rate; //ojo con distintos datasets
                        dif2 = 0;
                        j = j + 1;
                    }
                    else if(signalsList2.get(i+1) == 0){
                        continue;
                    }
                }
                else if(signalsList2.get(i) == 1){
                    continue;
                }

            }
            if (i % (sample_rate*2) == 0){
                ppm2 = (ppm2 + (pulsaciones_2*60/2))/2;
                System.out.println("BVP ES: "+ ppm2);
                System.out.println("ENTRA AL i = "+ i);
                pulsaciones_2 = 0;
            }


        }*/
        System.out.println("CANTIDAD DE PULSACIONES ECG " + pulsaciones);
        m = data.size();
        System.out.println("valor de m es " + m);

        System.out.println("CANTIDAD DE BVP ES " + pulsaciones_);
        m2 = data.size();
        System.out.println("valor de m2 es " + m2);

        System.out.println("at0 " + arrayTiempos[0]);
        System.out.println("at1 " + arrayTiempos[1]);
        System.out.println("at2 " + arrayTiempos[2]);

        //System.out.println(j);
        //System.out.println(j2);

        //cambia valores en la vista
        Thread t = new Thread(){
            @Override
            public void run(){
                while(!isInterrupted()){
                    try {
                        Thread.sleep(1000);  //1000ms = 1 sec
                        runOnUiThread(new Runnable() {
                            @Override
                            public void run() {

                                for (i = value_i; i < sample_rate*value_rate; i++) {
                                    //ECG
                                    System.out.println("valor de i "+ i );
                                    dif = dif + 1;
                                    if ((i + 1) != signalsList.size()){
                                        if (signalsList.get(i) == 0){
                                            if (signalsList.get(i + 1) == 1){ //halla peak
                                                //valor = signalsList.get(i);
                                                pulsaciones = pulsaciones + 1;
                                                pulsaciones2 = pulsaciones2 + 1;
                                                //System.out.println("PULSACION EN LA MEDICION: "+ i);
                                                System.out.println("VALOR DE DIF " + dif);
                                                //arrayTiempos[j] = Double.valueOf(dif);
                                                presion_arterial1 = Integer.valueOf(dif);
                                                presion_arterial2 = Integer.valueOf(dif);
                                                System.out.println("Valor de presion es: " + presion_arterial1);
                                                dif = 0;
                                                flag1 = true;

                                            }
                                            else if(signalsList.get(i+1) == -1){
                                                continue;
                                            }
                                        }
                                        else if(signalsList.get(i) == -1){
                                            if (signalsList.get(i+1) == 1){ //halla peak
                                                //valor = signalsList.get(i);
                                                pulsaciones = pulsaciones + 1;
                                                pulsaciones2 = pulsaciones2 + 1;
                                                //System.out.println("PULSACION EN LA MEDICION: "+ i);
                                                System.out.println("VALOR DE DIF " + dif);
                                                //arrayTiempos[j] = Double.valueOf(dif);
                                                presion_arterial1 = Integer.valueOf(dif);
                                                presion_arterial2 = Integer.valueOf(dif);
                                                System.out.println("Valor de presion es: " + presion_arterial1);
                                                dif = 0;
                                                flag1=true;
                                            }
                                            else if(signalsList.get(i+1) == 0){
                                                continue;
                                            }
                                        }
                                        else if(signalsList.get(i) == 1){
                                            continue;
                                        }

                                    }
                                    if (i % (sample_rate*2) == 0){
                                        ppm = (ppm + (pulsaciones2*60/2))/2;
                                        //System.out.println("PPM ES: "+ ppm);
                                        System.out.println("ENTRA AL i = "+ i);
                                        pulsaciones2 = 0;
                                    }

                                    //BVP
                                    dif2 = dif2 + 1;
                                    if ((i + 1) != signalsList2.size()){
                                        if (signalsList2.get(i) == 0){
                                            if (signalsList2.get(i + 1) == 1){ //halla peak
                                                //valor = signalsList2.get(i);
                                                pulsaciones_ = pulsaciones_ + 1;
                                                pulsaciones_2 = pulsaciones_2 + 1;
                                                System.out.println("PULSACION EN LA MEDICION: "+ i);
                                                System.out.println("VALOR DE DIF2" + dif2);
                                                //arrayTiempos[j] = (Double.valueOf(dif2) - arrayTiempos[j])/sample_rate; //ojo con distintos datasets
                                                presion_arterial1 = (Integer.valueOf(dif2) - presion_arterial1)/sample_rate;
                                                presion_arterial2 = (Integer.valueOf(dif2) - presion_arterial2)/sample_rate;
                                                System.out.println("Valor de presion es: " + presion_arterial1);
                                                dif2 = 0;
                                                j = j + 1;
                                                flag2 = true;
                                            }
                                            else if(signalsList2.get(i+1) == -1){
                                                continue;
                                            }
                                        }
                                        else if(signalsList2.get(i) == -1){
                                            if (signalsList2.get(i+1) == 1){ //halla peak
                                                //valor2 = signalsList2.get(i);
                                                pulsaciones_ = pulsaciones_ + 1;
                                                pulsaciones_2 = pulsaciones_2 + 1;
                                                System.out.println("PULSACION EN LA MEDICION: "+ i);
                                                System.out.println("VALOR DE DIF2" + dif2);
                                                //arrayTiempos[j] = (Double.valueOf(dif2) - arrayTiempos[j])/sample_rate; //ojo con distintos datasets
                                                presion_arterial1 = (Integer.valueOf(dif2) - presion_arterial1)/sample_rate;
                                                presion_arterial2 = (Integer.valueOf(dif2) - presion_arterial2)/sample_rate;
                                                System.out.println("Valor de presion es: " + presion_arterial1);
                                                dif2 = 0;
                                                j = j + 1;
                                                flag2= true;
                                            }
                                            else if(signalsList2.get(i+1) == 0){
                                                continue;
                                            }
                                        }
                                        else if(signalsList2.get(i) == 1){
                                            continue;
                                        }

                                    }
                                    if (flag1 == true && flag2 == true){
                                        ppm2 = (ppm2 + (pulsaciones_2*60/2))/2;
                                        System.out.println("BVP ES: "+ presion_arterial1);
                                        System.out.println("ENTRA AL i = "+ i);

                                        textView2.setText(String.valueOf(presion_arterial1*1000*(-0.5) + 200));
                                        textView.setText(String.valueOf(presion_arterial2 * 1000 * (-0.08) + 80 ));

                                        pulsaciones_2 = 0;
                                        flag1 = false;
                                        flag2 = false;

                                    }
                                }
                                System.out.println("SALIENDO DEL FOR");
                                count++;
                                count2++;

                                value_i = count*sample_rate;
                                value_rate = value_rate + 1;

                                double transformed = transformECG(n, count);
                                double transformed2 = transformECG(n, count2);
                                /*
                                textView.setText(String.valueOf(String.format("%.6f", transformed)));
                                textView2.setText(String.valueOf(String.format("%.6f", transformed2)));
                                */
                                date = new Date();
                                dateFormatted = dateFormat.format(date);
                                hist1.setText(dateFormatted + "                     " + String.format("%.8f", transformed) + " mmHg"); //info historial
                                hist2.setText(dateFormatted + "                     " + String.format("%.8f", transformed2) + " mmHg");  //info historial
                                //textView2.setText(String.valueOf(count+80));
                                try {
                                    OutputStreamWriter output = new OutputStreamWriter(openFileOutput("blood_pressure_history.txt", Activity.MODE_APPEND));
                                    output.append(count + "/" + (count+80) +"\n");
                                    output.flush();
                                    output.close();
                                } catch (IOException e) {
                                }
                            }
                        });
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        };
        t.start();

    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int id = item.getItemId();
        switch (id) {
            // Respond to the action bar's Up/Home button
            case android.R.id.home:
                //NavUtils.navigateUpFromSameTask(this);
                onBackPressed();
                return true;
        }
        return super.onOptionsItemSelected(item);
    }

    public void viewHistory(View view){
        Intent viewHistoryIntent = new Intent(view.getContext(), checkHistory.class);
        viewHistoryIntent.putExtra("origin", "bloodPressure");
        startActivity(viewHistoryIntent);
    }


    public static double transformECG(int n, int ADC){
        double ECG_V, ECG_mV;
        int G_ECG, VCC;

        VCC = 3;      // operating voltage
        G_ECG = 1000; // sensor gain

        ECG_V = (ADC/Math.pow(2, n) - 0.5)*VCC/G_ECG;

        ECG_mV = ECG_V*1000;

        return ECG_mV;
    }

}